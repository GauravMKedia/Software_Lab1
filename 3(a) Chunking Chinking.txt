3(a) Write a Python NLTK program to perform Chunking and Chinking on state_union corpus.

import nltk
from nltk.corpus import state_union
from nltk.tokenize import PunktSentenceTokenizer

# Download the state_union corpus if not already downloaded
nltk.download('state_union')

# Load the state_union corpus
corpus = state_union.raw()

# Train a PunktSentenceTokenizer on the state_union corpus
custom_sent_tokenizer = PunktSentenceTokenizer(corpus)

# Tokenize the corpus into sentences
sentences = custom_sent_tokenizer.tokenize(corpus)

# Define the chunk grammar and pattern
chunk_grammar = r"""
    NP: {<DT>?<JJ>*<NN.*>+} # Chunk Noun Phrases
    VP: {<VB.*><NP|PP|CLAUSE>+$} # Chunk Verb Phrases
    CLAUSE: {<NP><VP>} # Chunk Clauses
    """

# Create a function for chunking and chinking
def perform_chunking_chinking(sentence):
    tokenized = nltk.word_tokenize(sentence)
    tagged = nltk.pos_tag(tokenized)
    chunk_parser = nltk.RegexpParser(chunk_grammar)
    chunked = chunk_parser.parse(tagged)
    return chunked

# Perform chunking and chinking on each sentence
for sentence in sentences[:5]:  # Print the results for the first 5 sentences
    chunked_sentence = perform_chunking_chinking(sentence)
    print(chunked_sentence)
    print()
